{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/lib/api/api.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const nextServer = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL + \"/api\",\r\n  withCredentials: true,\r\n});\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,aAAa,8JAAK,CAAC,MAAM,CAAC;IACrC,SAAS,4DAAkC;IAC3C,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/lib/api/clientApi.ts"],"sourcesContent":["import { nextServer } from \"./api\";\r\nimport { User } from \"@/types/user\";\r\nimport { Note } from \"@/types/note\";\r\n\r\nexport interface NoteResponse {\r\n  notes: Note[];\r\n  totalPages: number;\r\n}\r\n\r\nexport interface CreateNoteParams {\r\n  title: string;\r\n  content: string;\r\n  tag: \"Todo\" | \"Work\" | \"Personal\" | \"Meeting\" | \"Shopping\";\r\n}\r\n\r\nexport type RegisterRequest = {\r\n  email: string;\r\n  password: string;\r\n  userName: string;\r\n};\r\n\r\nexport const register = async (data: RegisterRequest) => {\r\n  const res = await nextServer.post<User>(\"/auth/register\", data);\r\n  return res.data;\r\n};\r\n\r\nexport type UpdateMeRequest = {\r\n  username?: string;\r\n};\r\n\r\nexport const updateMe = async (data: UpdateMeRequest): Promise<User> => {\r\n  const res = await nextServer.patch<User>(\"users/me\", data);\r\n  return res.data;\r\n};\r\n\r\nexport type LoginRequest = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport const login = async (data: LoginRequest) => {\r\n  const res = await nextServer.post<User>(\"/auth/login\", data);\r\n  return res.data;\r\n};\r\n\r\nexport const logout = async (): Promise<void> => {\r\n  await nextServer.post(\"/auth/logout\");\r\n};\r\n\r\ntype CheckSessionRequest = {\r\n  success: boolean;\r\n};\r\n\r\nexport const checkSession = async () => {\r\n  const res = await nextServer.get<CheckSessionRequest>(\"/auth/session\");\r\n  return res.data.success;\r\n};\r\n\r\nexport const getMe = async () => {\r\n  const { data } = await nextServer.get<User>(\"/users/me\");\r\n  return data;\r\n};\r\n\r\nexport const fetchNotes = async (\r\n  page: number,\r\n  query: string,\r\n  tag?: string\r\n): Promise<NoteResponse> => {\r\n  const response = await nextServer.get<NoteResponse>(\"/notes\", {\r\n    params: {\r\n      page: page,\r\n      perPage: 12,\r\n      search: query,\r\n      tag: tag,\r\n    },\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchNoteById = async (id: string): Promise<Note> => {\r\n  const response = await nextServer.get<Note>(`/notes/${id}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const createNote = async (newNote: CreateNoteParams): Promise<Note> => {\r\n  const response = await nextServer.post<Note>(`/notes`, newNote, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteNote = async (id: string): Promise<Note> => {\r\n  const response = await nextServer.delete<Note>(`/notes/${id}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AAqBO,MAAM,WAAW,OAAO;IAC7B,MAAM,MAAM,MAAM,6IAAU,CAAC,IAAI,CAAO,kBAAkB;IAC1D,OAAO,IAAI,IAAI;AACjB;AAMO,MAAM,WAAW,OAAO;IAC7B,MAAM,MAAM,MAAM,6IAAU,CAAC,KAAK,CAAO,YAAY;IACrD,OAAO,IAAI,IAAI;AACjB;AAOO,MAAM,QAAQ,OAAO;IAC1B,MAAM,MAAM,MAAM,6IAAU,CAAC,IAAI,CAAO,eAAe;IACvD,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,SAAS;IACpB,MAAM,6IAAU,CAAC,IAAI,CAAC;AACxB;AAMO,MAAM,eAAe;IAC1B,MAAM,MAAM,MAAM,6IAAU,CAAC,GAAG,CAAsB;IACtD,OAAO,IAAI,IAAI,CAAC,OAAO;AACzB;AAEO,MAAM,QAAQ;IACnB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,6IAAU,CAAC,GAAG,CAAO;IAC5C,OAAO;AACT;AAEO,MAAM,aAAa,OACxB,MACA,OACA;IAEA,MAAM,WAAW,MAAM,6IAAU,CAAC,GAAG,CAAe,UAAU;QAC5D,QAAQ;YACN,MAAM;YACN,SAAS;YACT,QAAQ;YACR,KAAK;QACP;QACA,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,gBAAgB,OAAO;IAClC,MAAM,WAAW,MAAM,6IAAU,CAAC,GAAG,CAAO,CAAC,OAAO,EAAE,IAAI,EAAE;QAC1D,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,6IAAU,CAAC,IAAI,CAAO,CAAC,MAAM,CAAC,EAAE,SAAS;QAC9D,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,6IAAU,CAAC,MAAM,CAAO,CAAC,OAAO,EAAE,IAAI,EAAE;QAC7D,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/app/%28private%20routes%29/notes/filter/%5B...slug%5D/Notes.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/09-auth/app/(private routes)/notes/filter/[...slug]/Notes.client.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/09-auth/app/(private routes)/notes/filter/[...slug]/Notes.client.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,sRAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAwU,GACrW,sGACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/app/%28private%20routes%29/notes/filter/%5B...slug%5D/Notes.client.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/09-auth/app/(private routes)/notes/filter/[...slug]/Notes.client.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/09-auth/app/(private routes)/notes/filter/[...slug]/Notes.client.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,sRAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAoT,GACjV,kFACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/09-auth/app/(private routes)/notes/filter/[...slug]/NotesPage.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"app\": \"NotesPage-module__y6T_Na__app\",\n  \"button\": \"NotesPage-module__y6T_Na__button\",\n  \"toolbar\": \"NotesPage-module__y6T_Na__toolbar\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/app/%28private%20routes%29/notes/filter/%5B...slug%5D/page.tsx"],"sourcesContent":["import {\r\n  QueryClient,\r\n  dehydrate,\r\n  HydrationBoundary,\r\n} from \"@tanstack/react-query\";\r\nimport { fetchNotes } from \"@/lib/api/clientApi\";\r\nimport NotesClient from \"./Notes.client\";\r\nimport { Metadata } from \"next\";\r\nimport css from \"./NotesPage.module.css\";\r\n\r\ntype Props = {\r\n  params: { slug: string[] };\r\n};\r\n\r\nexport async function generateMetadata({ params }: Props): Promise<Metadata> {\r\n  const { slug } = params;\r\n  const filterNote = slug[0];\r\n  return {\r\n    title: `Notes with ${filterNote} filter`,\r\n    description: `All your notes in one app`,\r\n    openGraph: {\r\n      title: `Notes with ${filterNote} filter`,\r\n      description: `All your notes in one app`,\r\n      url: `https://08-zustand-theta-blue.vercel.app/notes/filter/${filterNote}`,\r\n      siteName: \"NoteHub\",\r\n      images: [\r\n        {\r\n          url: \"https://ac.goit.global/fullstack/react/notehub-og-meta.jpg\",\r\n          width: 1200,\r\n          height: 630,\r\n        },\r\n      ],\r\n    },\r\n  };\r\n}\r\n\r\nexport default async function Notes({ params }: Props) {\r\n  const queryClient = new QueryClient();\r\n  const { slug } = params;\r\n  const tag = slug[0] === \"All\" ? undefined : slug[0];\r\n\r\n  await queryClient.prefetchQuery({\r\n    queryKey: [\"notes\", { query: \"\", page: 1, tag: tag }],\r\n    queryFn: () => fetchNotes(1, \"\", tag),\r\n  });\r\n\r\n  return (\r\n    <div className={css.app}>\r\n      <HydrationBoundary state={dehydrate(queryClient)}>\r\n        <NotesClient tag={tag} />\r\n      </HydrationBoundary>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;;;;;;AAMO,eAAe,iBAAiB,EAAE,MAAM,EAAS;IACtD,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,MAAM,aAAa,IAAI,CAAC,EAAE;IAC1B,OAAO;QACL,OAAO,CAAC,WAAW,EAAE,WAAW,OAAO,CAAC;QACxC,aAAa,CAAC,yBAAyB,CAAC;QACxC,WAAW;YACT,OAAO,CAAC,WAAW,EAAE,WAAW,OAAO,CAAC;YACxC,aAAa,CAAC,yBAAyB,CAAC;YACxC,KAAK,CAAC,sDAAsD,EAAE,YAAY;YAC1E,UAAU;YACV,QAAQ;gBACN;oBACE,KAAK;oBACL,OAAO;oBACP,QAAQ;gBACV;aACD;QACH;IACF;AACF;AAEe,eAAe,MAAM,EAAE,MAAM,EAAS;IACnD,MAAM,cAAc,IAAI,0MAAW;IACnC,MAAM,EAAE,IAAI,EAAE,GAAG;IACjB,MAAM,MAAM,IAAI,CAAC,EAAE,KAAK,QAAQ,YAAY,IAAI,CAAC,EAAE;IAEnD,MAAM,YAAY,aAAa,CAAC;QAC9B,UAAU;YAAC;YAAS;gBAAE,OAAO;gBAAI,MAAM;gBAAG,KAAK;YAAI;SAAE;QACrD,SAAS,IAAM,IAAA,mJAAU,EAAC,GAAG,IAAI;IACnC;IAEA,qBACE,4PAAC;QAAI,WAAW,iNAAG,CAAC,GAAG;kBACrB,cAAA,4PAAC,uNAAiB;YAAC,OAAO,IAAA,sMAAS,EAAC;sBAClC,cAAA,4PAAC,4MAAW;gBAAC,KAAK;;;;;;;;;;;;;;;;AAI1B","debugId":null}}]
}