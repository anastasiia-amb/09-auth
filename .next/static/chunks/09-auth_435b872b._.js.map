{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/09-auth/components/TagsMenu/TagsMenu.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"menuButton\": \"TagsMenu-module__RfxcUq__menuButton\",\n  \"menuContainer\": \"TagsMenu-module__RfxcUq__menuContainer\",\n  \"menuItem\": \"TagsMenu-module__RfxcUq__menuItem\",\n  \"menuLink\": \"TagsMenu-module__RfxcUq__menuLink\",\n  \"menuList\": \"TagsMenu-module__RfxcUq__menuList\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/components/TagsMenu/TagsMenu.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport css from \"./TagsMenu.module.css\";\r\nimport Link from \"next/link\";\r\nimport { useState } from \"react\";\r\n\r\nconst tags: string[] = [\"Todo\", \"Work\", \"Personal\", \"Meeting\", \"Shopping\"];\r\n\r\nexport default function TagsMenu() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={css.menuContainer}>\r\n      <button className={css.menuButton} onClick={() => setIsOpen(!isOpen)}>\r\n        Notes â–¾\r\n      </button>\r\n      {isOpen && (\r\n        <ul className={css.menuList}>\r\n          <li className={css.menuItem} key={\"All\"}>\r\n            <Link\r\n              href={\"/notes/filter/All\"}\r\n              className={css.menuLink}\r\n              onClick={() => setIsOpen(false)}\r\n            >\r\n              All\r\n            </Link>\r\n          </li>\r\n          {tags.map((tag) => (\r\n            <li\r\n              className={css.menuItem}\r\n              key={typeof tag === \"string\" ? tag : tag}\r\n            >\r\n              <Link\r\n                href={`/notes/filter/${tag}`}\r\n                className={css.menuLink}\r\n                onClick={() => setIsOpen(false)}\r\n              >\r\n                {typeof tag === \"string\" ? tag : tag}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAMA,MAAM,OAAiB;IAAC;IAAQ;IAAQ;IAAY;IAAW;CAAW;AAE3D,SAAS;;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,uLAAQ,EAAC;IAErC,qBACE,2MAAC;QAAI,WAAW,0KAAG,CAAC,aAAa;;0BAC/B,2MAAC;gBAAO,WAAW,0KAAG,CAAC,UAAU;gBAAE,SAAS,IAAM,UAAU,CAAC;0BAAS;;;;;;YAGrE,wBACC,2MAAC;gBAAG,WAAW,0KAAG,CAAC,QAAQ;;kCACzB,2MAAC;wBAAG,WAAW,0KAAG,CAAC,QAAQ;kCACzB,cAAA,2MAAC,wLAAI;4BACH,MAAM;4BACN,WAAW,0KAAG,CAAC,QAAQ;4BACvB,SAAS,IAAM,UAAU;sCAC1B;;;;;;uBAL+B;;;;;oBASjC,KAAK,GAAG,CAAC,CAAC,oBACT,2MAAC;4BACC,WAAW,0KAAG,CAAC,QAAQ;sCAGvB,cAAA,2MAAC,wLAAI;gCACH,MAAM,AAAC,iBAAoB,OAAJ;gCACvB,WAAW,0KAAG,CAAC,QAAQ;gCACvB,SAAS,IAAM,UAAU;0CAExB,OAAO,QAAQ,WAAW,MAAM;;;;;;2BAP9B,OAAO,QAAQ,WAAW,MAAM;;;;;;;;;;;;;;;;;AAenD;GArCwB;KAAA","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/09-auth/components/AuthNavigation/AuthNavigation.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"logoutButton\": \"AuthNavigation-module__sd2TAa__logoutButton\",\n  \"navigationItem\": \"AuthNavigation-module__sd2TAa__navigationItem\",\n  \"navigationLink\": \"AuthNavigation-module__sd2TAa__navigationLink\",\n  \"userEmail\": \"AuthNavigation-module__sd2TAa__userEmail\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/lib/api/api.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const nextServer = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL + \"/api\",\r\n  withCredentials: true,\r\n});\r\n"],"names":[],"mappings":";;;;AAGW;AAHX;;AAEO,MAAM,aAAa,iKAAK,CAAC,MAAM,CAAC;IACrC,SAAS,4DAAkC;IAC3C,iBAAiB;AACnB","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/lib/api/clientApi.ts"],"sourcesContent":["import { nextServer } from \"./api\";\r\nimport { User } from \"@/types/user\";\r\nimport { Note } from \"@/types/note\";\r\n\r\nexport interface NoteResponse {\r\n  notes: Note[];\r\n  totalPages: number;\r\n}\r\n\r\nexport interface CreateNoteParams {\r\n  title: string;\r\n  content: string;\r\n  tag: \"Todo\" | \"Work\" | \"Personal\" | \"Meeting\" | \"Shopping\";\r\n}\r\n\r\nexport type RegisterRequest = {\r\n  email: string;\r\n  password: string;\r\n  userName: string;\r\n};\r\n\r\nexport const register = async (data: RegisterRequest) => {\r\n  const res = await nextServer.post<User>(\"/auth/register\", data);\r\n  return res.data;\r\n};\r\n\r\nexport type UpdateMeRequest = {\r\n  username?: string;\r\n};\r\n\r\nexport const updateMe = async (data: UpdateMeRequest): Promise<User> => {\r\n  const res = await nextServer.patch<User>(\"users/me\", data);\r\n  return res.data;\r\n};\r\n\r\nexport type LoginRequest = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport const login = async (data: LoginRequest) => {\r\n  const res = await nextServer.post<User>(\"/auth/login\", data);\r\n  return res.data;\r\n};\r\n\r\nexport const logout = async (): Promise<void> => {\r\n  await nextServer.post(\"/auth/logout\");\r\n};\r\n\r\ntype CheckSessionRequest = {\r\n  success: boolean;\r\n};\r\n\r\nexport const checkSession = async () => {\r\n  const res = await nextServer.get<CheckSessionRequest>(\"/auth/session\");\r\n  return res.data.success;\r\n};\r\n\r\nexport const getMe = async () => {\r\n  const { data } = await nextServer.get<User>(\"/users/me\");\r\n  return data;\r\n};\r\n\r\nexport const fetchNotes = async (\r\n  page: number,\r\n  query: string,\r\n  tag?: string\r\n): Promise<NoteResponse> => {\r\n  const response = await nextServer.get<NoteResponse>(\"/notes\", {\r\n    params: {\r\n      page: page,\r\n      perPage: 12,\r\n      search: query,\r\n      tag: tag,\r\n    },\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const fetchNoteById = async (id: string): Promise<Note> => {\r\n  const response = await nextServer.get<Note>(`/notes/${id}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const createNote = async (newNote: CreateNoteParams): Promise<Note> => {\r\n  const response = await nextServer.post<Note>(`/notes`, newNote, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const deleteNote = async (id: string): Promise<Note> => {\r\n  const response = await nextServer.delete<Note>(`/notes/${id}`, {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  return response.data;\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AAqBO,MAAM,WAAW,OAAO;IAC7B,MAAM,MAAM,MAAM,gJAAU,CAAC,IAAI,CAAO,kBAAkB;IAC1D,OAAO,IAAI,IAAI;AACjB;AAMO,MAAM,WAAW,OAAO;IAC7B,MAAM,MAAM,MAAM,gJAAU,CAAC,KAAK,CAAO,YAAY;IACrD,OAAO,IAAI,IAAI;AACjB;AAOO,MAAM,QAAQ,OAAO;IAC1B,MAAM,MAAM,MAAM,gJAAU,CAAC,IAAI,CAAO,eAAe;IACvD,OAAO,IAAI,IAAI;AACjB;AAEO,MAAM,SAAS;IACpB,MAAM,gJAAU,CAAC,IAAI,CAAC;AACxB;AAMO,MAAM,eAAe;IAC1B,MAAM,MAAM,MAAM,gJAAU,CAAC,GAAG,CAAsB;IACtD,OAAO,IAAI,IAAI,CAAC,OAAO;AACzB;AAEO,MAAM,QAAQ;IACnB,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,gJAAU,CAAC,GAAG,CAAO;IAC5C,OAAO;AACT;AAEO,MAAM,aAAa,OACxB,MACA,OACA;IAEA,MAAM,WAAW,MAAM,gJAAU,CAAC,GAAG,CAAe,UAAU;QAC5D,QAAQ;YACN,MAAM;YACN,SAAS;YACT,QAAQ;YACR,KAAK;QACP;QACA,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,gBAAgB,OAAO;IAClC,MAAM,WAAW,MAAM,gJAAU,CAAC,GAAG,CAAO,AAAC,UAAY,OAAH,KAAM;QAC1D,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,gJAAU,CAAC,IAAI,CAAQ,UAAS,SAAS;QAC9D,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,OAAO,SAAS,IAAI;AACtB;AAEO,MAAM,aAAa,OAAO;IAC/B,MAAM,WAAW,MAAM,gJAAU,CAAC,MAAM,CAAO,AAAC,UAAY,OAAH,KAAM;QAC7D,SAAS;YACP,gBAAgB;QAClB;IACF;IACA,OAAO,SAAS,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/lib/store/authStore.ts"],"sourcesContent":["import { create } from \"zustand\";\r\nimport { User } from \"@/types/user\";\r\nimport { persist } from \"zustand/middleware\";\r\n\r\ntype AuthStore = {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  setUser: (user: User) => void;\r\n  clearIsAuthenticated: () => void;\r\n};\r\n\r\nexport const useAuthStore = create<AuthStore>()(\r\n  persist(\r\n    (set) => ({\r\n      isAuthenticated: false,\r\n      user: null,\r\n      setUser: (user: User) => set({ user, isAuthenticated: true }),\r\n      clearIsAuthenticated: () => set({ user: null, isAuthenticated: false }),\r\n    }),\r\n    {\r\n      name: \"auth-store\",\r\n      partialize: (state) => ({\r\n        isAuthenticated: state.isAuthenticated,\r\n        user: state.user,\r\n      }),\r\n    }\r\n  )\r\n);\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;AASO,MAAM,eAAe,IAAA,mKAAM,IAChC,IAAA,yKAAO,EACL,CAAC,MAAQ,CAAC;QACR,iBAAiB;QACjB,MAAM;QACN,SAAS,CAAC,OAAe,IAAI;gBAAE;gBAAM,iBAAiB;YAAK;QAC3D,sBAAsB,IAAM,IAAI;gBAAE,MAAM;gBAAM,iBAAiB;YAAM;IACvE,CAAC,GACD;IACE,MAAM;IACN,YAAY,CAAC,QAAU,CAAC;YACtB,iBAAiB,MAAM,eAAe;YACtC,MAAM,MAAM,IAAI;QAClB,CAAC;AACH","debugId":null}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/components/AuthNavigation/AuthNavigation.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport css from \"./AuthNavigation.module.css\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { logout } from \"@/lib/api/clientApi\";\r\nimport { useAuthStore } from \"@/lib/store/authStore\";\r\nimport Link from \"next/link\";\r\n\r\nconst AuthNavigation = () => {\r\n  const router = useRouter();\r\n  const { isAuthenticated, user } = useAuthStore();\r\n  const clearIsAuthenticated = useAuthStore(\r\n    (state) => state.clearIsAuthenticated\r\n  );\r\n  const handleLogout = async () => {\r\n    await logout();\r\n    clearIsAuthenticated();\r\n    router.push(\"/sign-in\");\r\n  };\r\n  return (\r\n    <>\r\n      {isAuthenticated && (\r\n        <>\r\n          <li className={css.navigationItem}>\r\n            <Link\r\n              href=\"/profile\"\r\n              prefetch={false}\r\n              className={css.navigationLink}\r\n            >\r\n              Profile\r\n            </Link>\r\n          </li>\r\n\r\n          <li className={css.navigationItem}>\r\n            <p className={css.userEmail}>{user?.email}</p>\r\n            <button className={css.logoutButton} onClick={handleLogout}>\r\n              Logout\r\n            </button>\r\n          </li>\r\n        </>\r\n      )}\r\n\r\n      {!isAuthenticated && (\r\n        <>\r\n          <li className={css.navigationItem}>\r\n            <Link\r\n              href=\"/sign-in\"\r\n              prefetch={false}\r\n              className={css.navigationLink}\r\n            >\r\n              Login\r\n            </Link>\r\n          </li>\r\n          <li className={css.navigationItem}>\r\n            <Link\r\n              href=\"/sign-up\"\r\n              prefetch={false}\r\n              className={css.navigationLink}\r\n            >\r\n              Sign up\r\n            </Link>\r\n          </li>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default AuthNavigation;\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;;;AANA;;;;;;AAQA,MAAM,iBAAiB;;IACrB,MAAM,SAAS,IAAA,gKAAS;IACxB,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,GAAG,IAAA,0JAAY;IAC9C,MAAM,uBAAuB,IAAA,0JAAY;6DACvC,CAAC,QAAU,MAAM,oBAAoB;;IAEvC,MAAM,eAAe;QACnB,MAAM,IAAA,kJAAM;QACZ;QACA,OAAO,IAAI,CAAC;IACd;IACA,qBACE;;YACG,iCACC;;kCACE,2MAAC;wBAAG,WAAW,sLAAG,CAAC,cAAc;kCAC/B,cAAA,2MAAC,wLAAI;4BACH,MAAK;4BACL,UAAU;4BACV,WAAW,sLAAG,CAAC,cAAc;sCAC9B;;;;;;;;;;;kCAKH,2MAAC;wBAAG,WAAW,sLAAG,CAAC,cAAc;;0CAC/B,2MAAC;gCAAE,WAAW,sLAAG,CAAC,SAAS;0CAAG,iBAAA,2BAAA,KAAM,KAAK;;;;;;0CACzC,2MAAC;gCAAO,WAAW,sLAAG,CAAC,YAAY;gCAAE,SAAS;0CAAc;;;;;;;;;;;;;;YAOjE,CAAC,iCACA;;kCACE,2MAAC;wBAAG,WAAW,sLAAG,CAAC,cAAc;kCAC/B,cAAA,2MAAC,wLAAI;4BACH,MAAK;4BACL,UAAU;4BACV,WAAW,sLAAG,CAAC,cAAc;sCAC9B;;;;;;;;;;;kCAIH,2MAAC;wBAAG,WAAW,sLAAG,CAAC,cAAc;kCAC/B,cAAA,2MAAC,wLAAI;4BACH,MAAK;4BACL,UAAU;4BACV,WAAW,sLAAG,CAAC,cAAc;sCAC9B;;;;;;;;;;;;;;;AAQb;GA1DM;;QACW,gKAAS;QACU,0JAAY;QACjB,0JAAY;;;KAHrC;uCA2DS","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/msigf/Desktop/Projects/09-auth/components/TanStackProvider/TanStackProvider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport default function TanStackProvider({ children }: Props) {\r\n  const [queryClient] = useState(() => new QueryClient());\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;;;AAHA;;;AASe,SAAS,iBAAiB,KAAmB;QAAnB,EAAE,QAAQ,EAAS,GAAnB;;IACvC,MAAM,CAAC,YAAY,GAAG,IAAA,uLAAQ;qCAAC,IAAM,IAAI,6MAAW;;IAEpD,qBACE,2MAAC,8NAAmB;QAAC,QAAQ;kBAAc;;;;;;AAE/C;GANwB;KAAA","debugId":null}}]
}